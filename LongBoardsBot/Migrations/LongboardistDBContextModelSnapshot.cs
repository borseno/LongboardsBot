// <auto-generated />
using System;
using LongBoardsBot.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LongBoardsBot.Migrations
{
    [DbContext(typeof(LongboardistDBContext))]
    partial class LongboardistDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LongBoardsBot.Models.BotUser", b =>
                {
                    b.Property<long>("ChatId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("PendingId");

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<int>("Stage")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("UserName");

                    b.HasKey("ChatId");

                    b.HasIndex("PendingId");

                    b.ToTable("BotUsers");
                });

            modelBuilder.Entity("LongBoardsBot.Models.BotUserLongBoard", b =>
                {
                    b.Property<long>("BotUserId");

                    b.Property<int>("LongboardId");

                    b.HasKey("BotUserId", "LongboardId");

                    b.HasIndex("LongboardId");

                    b.ToTable("BotUserLongBoard");
                });

            modelBuilder.Entity("LongBoardsBot.Models.ChatMessage", b =>
                {
                    b.Property<int>("MessageId");

                    b.Property<bool>("IgnoreDelete");

                    b.Property<long>("UserChatId");

                    b.HasKey("MessageId");

                    b.HasIndex("UserChatId");

                    b.ToTable("ChatMessage");
                });

            modelBuilder.Entity("LongBoardsBot.Models.LongBoard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<decimal>("Price");

                    b.Property<string>("Style")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Longboards");
                });

            modelBuilder.Entity("LongBoardsBot.Models.BotUser", b =>
                {
                    b.HasOne("LongBoardsBot.Models.LongBoard", "Pending")
                        .WithMany()
                        .HasForeignKey("PendingId");
                });

            modelBuilder.Entity("LongBoardsBot.Models.BotUserLongBoard", b =>
                {
                    b.HasOne("LongBoardsBot.Models.BotUser", "BotUser")
                        .WithMany("BotUserLongBoards")
                        .HasForeignKey("BotUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LongBoardsBot.Models.LongBoard", "Longboard")
                        .WithMany("BotUserLongBoards")
                        .HasForeignKey("LongboardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LongBoardsBot.Models.ChatMessage", b =>
                {
                    b.HasOne("LongBoardsBot.Models.BotUser", "User")
                        .WithMany("History")
                        .HasForeignKey("UserChatId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
